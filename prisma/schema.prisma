generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  role      UserRole  @default(EMPLOYEE)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isActive  Boolean   @default(true)
  sales     Sale[]
}

enum UserRole {
  ADMIN
  MANAGER
  EMPLOYEE
}

model Product {
  id           String       @id @default(cuid())
  name         String
  description  String?
  precoUnitario Decimal     @db.Decimal(10, 2)
  currentStock Int          @default(0)
  unit         String       @default("un")
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  itensDeVenda ItensVenda[]

  @@index([name])
}

model Customer {
  id         String   @id @default(cuid())
  name       String
  email      String?
  phone      String?
  address    String?
  city       String?
  state      String?
  postalCode String?
  taxId      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isActive   Boolean  @default(true)
  sales      Sale[]

  @@index([name])
  @@index([email])
}

model Sale {
  id                      String     @id @default(cuid())
  dataRetirada            DateTime   @default(now())
  dataDevolucaoPrevista   DateTime
  customerId              String
  customer                Customer   @relation(fields: [customerId], references: [id])
  userId                  String
  user                    User       @relation(fields: [userId], references: [id])
  status                  SaleStatus @default(ATIVO) 
  totalAmount             Decimal?   @db.Decimal(10, 2)
  notes                   String?
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt
  itens                   ItensVenda[]

  @@index([customerId])
  @@index([userId])
}

model ItensVenda {
  id                      String  @id @default(cuid())
  saleId                  String
  sale                    Sale    @relation(fields: [saleId], references: [id])
  produtoId               String
  produto                 Product @relation(fields: [produtoId], references: [id])
  quantidadeRetirada      Int
  quantidadeDevolvida     Int?
  precoUnitarioNoMomento  Decimal @db.Decimal(10, 2)
}


enum SaleStatus {
  ATIVO
  ATRASADO
  CONCLUIDO
  CANCELADO
}